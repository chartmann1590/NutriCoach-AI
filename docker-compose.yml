services:
  app:
    build: .
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://nutricoach:nutricoach_password@postgres:5432/nutricoach
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-please-change-in-production}
      - WTF_CSRF_SECRET_KEY=${WTF_CSRF_SECRET_KEY:-dev-csrf-key-please-change}
      - OLLAMA_URL=${OLLAMA_URL:-http://host.docker.internal:11434}
    volumes:
      - uploads:/app/static/uploads
      - logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nutricoach-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=nutricoach
      - POSTGRES_USER=nutricoach
      - POSTGRES_PASSWORD=nutricoach_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nutricoach -d nutricoach"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - nutricoach-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - nutricoach-network

volumes:
  postgres_data:
  redis_data:
  uploads:
  logs:

networks:
  nutricoach-network:
    driver: bridge