name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          
          # Generate changelog
          CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          
          # Save changelog to file
          cat > CHANGELOG.md << EOF
          ## What's Changed in ${GITHUB_REF_NAME}
          
          ${CHANGELOG}
          
          **Full Changelog**: https://github.com/${GITHUB_REPOSITORY}/compare/${PREV_TAG}...${GITHUB_REF_NAME}
          EOF
          
          echo "changelog_file=CHANGELOG.md" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: NutriCoach ${{ github.ref_name }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload-assets:
    runs-on: ubuntu-latest
    needs: create-release
    
    strategy:
      matrix:
        include:
          - name: "Source Code"
            asset_name: "nutricoach-source-${{ github.ref_name }}.tar.gz"
            command: "tar -czf nutricoach-source-${{ github.ref_name }}.tar.gz --exclude='.git' --exclude='node_modules' --exclude='__pycache__' --exclude='*.pyc' --exclude='.pytest_cache' --exclude='coverage' --exclude='htmlcov' ."
          - name: "Documentation"
            asset_name: "nutricoach-docs-${{ github.ref_name }}.zip"
            command: "cd docs && zip -r ../nutricoach-docs-${{ github.ref_name }}.zip ."
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create ${{ matrix.name }}
        run: ${{ matrix.command }}

      - name: Upload ${{ matrix.name }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  build-docker-release:
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.title=NutriCoach
            org.opencontainers.image.description=AI-powered nutrition tracking application
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-flutter-release:
    runs-on: ubuntu-latest
    needs: create-release
    
    defaults:
      run:
        working-directory: nutrition_ai_mobile
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: flutter pub get

      - name: Build APKs
        run: flutter build apk --release --split-per-abi

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload ARM64 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: nutrition_ai_mobile/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          asset_name: nutricoach-mobile-arm64-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload ARM32 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: nutrition_ai_mobile/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
          asset_name: nutricoach-mobile-arm32-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload x86_64 APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: nutrition_ai_mobile/build/app/outputs/flutter-apk/app-x86_64-release.apk
          asset_name: nutricoach-mobile-x86_64-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload App Bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: nutrition_ai_mobile/build/app/outputs/bundle/release/app-release.aab
          asset_name: nutricoach-mobile-${{ github.ref_name }}.aab
          asset_content_type: application/octet-stream

  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-and-upload-assets, build-docker-release, build-flutter-release]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.build-and-upload-assets.result }}" == "success" ] && 
             [ "${{ needs.build-docker-release.result }}" == "success" ] && 
             [ "${{ needs.build-flutter-release.result }}" == "success" ]; then
            echo "‚úÖ Release ${{ github.ref_name }} completed successfully!"
            echo "üéâ All assets uploaded and Docker images pushed."
          else
            echo "‚ùå Some release jobs failed."
            exit 1
          fi